"Chuỗi logic sau trả về true hay false
((1<3) && (2<4) || (11<25 || 16> 21)) && true" 
  trả về true vì ((1<3) && (2<4)  true và (11<25 || 16> 21) về true true với true sẽ về true
"Chuỗi logic sau trả về true hay false
((5<6) true ||  false(4<2) true) && (21<2o false && 13 < 11 flase) && false"  tất cả sẽ trả về false 
"Chuỗi logic sau trả về true hay false
((true && false) || (false && false)) && (false || true)"
    false                 flase                true
                   false                true
                                false
"Chuỗi logic sau trả về true hay false
((true || false) && (true || false)) || (true && false)"
     true                  true               false
                  true                       
"Chuỗi logic sau trả về true hay false ( ! là ngược lại ví dụ !true = false và !false = true)
!(!(true || false) && (!true && false)) && (true && !false)"
          false                   false                     true
                                    true
sự khác nhau giữa i++ và ++i (i là một số nguyên)
sự khác nhau của chúng là i++ sẽ trả về giá trị 3 khi thực hiện phép tính  và giá trị trả về sau phép tính à i tăng thêm 1 đơn vị
   ++i sẽ trả i lớn hơn 1 dơn vị ban đầu từ trước và trả và ra giá trị là 4
27	"Đoạn code sau có vấn đề gì
for(var i=0; i<10; i--) { 
    print(i); 
}" 
đoạn    code này là i bắt đầu trong vòng lặp từ só 0 lên i không thể -- đc mà phải i++ để vào vòng lặp và hàm print bị sai

"Đoạn code sau trả về giá trị bao nhiêu (% là toán tử lấy số dư, ví dụ 3%2 = 1)
int total = 0;
for(int i=0; i<11; i++) {
   if(i %2 == 0) {
       total += 1;
   } else {
       total += 2;
   }
}
return total;" total bằng 16 
Sự khác nhau chính giữa hai kiểu dữ liệu này là cách thức xử lý và truy xuất các phần tử:

Trong Stack, các phần tử được thêm vào  và lấy ra theo nguyên tắc LIFO , tức là phần tử cuối cùng được thêm vào sẽ là phần tử đầu tiên được lấy ra, và ngược lại.
Trong Queue, các phần tử được thêm vào  và lấy ra  theo nguyên tắc FIFO , tức là phần tử đầu tiên được thêm vào sẽ là phần tử đầu tiên được lấy ra, và ngược lại.
